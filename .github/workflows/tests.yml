name: Tests

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: moonrepo/setup-rust@v0
        with:
          channel: nightly

      # this is cheaper than requesting the non-minimal profile
      - run: rustup component add rustfmt

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

  check:
    name: Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runtime: [tokio]
        tls: [native-tls, rustls]
    steps:
      - uses: actions/checkout@v3

      - uses: moonrepo/setup-rust@v0
        with:
          channel: nightly

      - name: Run cargo check
        run: cargo check --no-default-features --features sqlite,postgres,mysql,runtime-${{ matrix.runtime }}-${{ matrix.tls }}

  test:
    name: Unit Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runtime: [tokio]
        tls: [native-tls, rustls]
    steps:
      - uses: actions/checkout@v3

      - uses: moonrepo/setup-rust@v0
        with:
          channel: nightly

      - name: Run unit tests
        run: cargo test --no-default-features --features runtime-${{ matrix.runtime }}-${{ matrix.tls }}
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off'

      - name: Aggregate code coverage with grcov
        uses: alekitto/grcov@v0.2
      - name: Upload code coverage
        uses: codecov/codecov-action@v3
      - name: Remove GCDA files
        run: find target/ -name *.gcda -delete

  sqlite:
    name: SQLite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runtime: [tokio]
    needs: check
    steps:
      - uses: actions/checkout@v3

      - uses: moonrepo/setup-rust@v0
        with:
          channel: nightly

      - name: Run tests
        run: cargo test --no-default-features --features sqlite,runtime-${{ matrix.runtime }}-rustls,functional-tests -- --test-threads=1
        env:
          DATABASE_DSN: 'sqlite://:memory:'
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off'

      - name: Aggregate code coverage with grcov
        uses: alekitto/grcov@v0.2
      - name: Upload code coverage
        uses: codecov/codecov-action@v3
      - name: Remove GCDA files
        run: find target/ -name *.gcda -delete

  postgres:
    name: Postgres
    runs-on: ubuntu-latest
    strategy:
      matrix:
        postgres: [15, 11]
        runtime: [tokio]
        tls: [native-tls, rustls]
    needs: check
    steps:
      - uses: actions/checkout@v3

      - uses: moonrepo/setup-rust@v0
        with:
          channel: nightly

      - run: |
          docker-compose run -d -p 5432:5432 --name postgres_${{ matrix.postgres }} postgres_${{ matrix.postgres }}
          docker-compose run -d -p 5433:5432 --name postgres_${{ matrix.postgres }}_ssl postgres_${{ matrix.postgres }}_ssl
          docker exec postgres_${{ matrix.postgres }} bash -c "until pg_isready; do sleep 1; done"

      - name: Run tests
        run: cargo test --no-default-features --features postgres,runtime-${{ matrix.runtime }}-${{ matrix.tls }},functional-tests
        env:
          DATABASE_DSN: postgres://postgres:password@localhost:5432/dbal
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off'

      - name: Run SSL tests
        run: cargo test --no-default-features --features postgres,runtime-${{ matrix.runtime }}-${{ matrix.tls }},functional-tests
        env:
          DATABASE_DSN: postgres://postgres:password@localhost:5433/dbal?ssl_mode=verify-ca&ca=.%2Ftests%2Fpostgres%2Fcerts%2Fca.crt
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off'

      - name: Aggregate code coverage with grcov
        uses: alekitto/grcov@v0.2
      - name: Upload code coverage
        uses: codecov/codecov-action@v3
      - name: Remove GCDA files
        run: find target/ -name *.gcda -delete

  mysql:
    name: MySQL
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mysql: [8, 5_6]
        runtime: [tokio]
        tls: [native-tls, rustls]
    needs: check
    steps:
      - uses: actions/checkout@v3

      - uses: moonrepo/setup-rust@v0
        with:
          channel: nightly

      - run: |
          docker-compose run -d -p 3306:3306 mysql_${{ matrix.mysql }}
          docker-compose run -d -p 3307:3306 mysql_${{ matrix.mysql }}_ssl
      - run: sleep 60

      - name: Run tests
        run: cargo test --no-default-features --features mysql,runtime-${{ matrix.runtime }}-${{ matrix.tls }},functional-tests
        env:
          DATABASE_DSN: mysql://root:password@localhost:3306/dbal
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off'

      - name: Run SSL tests
        run: cargo test --no-default-features --features mysql,runtime-${{ matrix.runtime }}-${{ matrix.tls }},functional-tests
        env:
          DATABASE_DSN: mysql://root:password@localhost:3307/dbal?ssl_mode=verify-ca&ca=.%2Ftests%2Fmysql%2Fcerts%2Fca.crt
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off'

      - name: Aggregate code coverage with grcov
        uses: alekitto/grcov@v0.2
      - name: Upload code coverage
        uses: codecov/codecov-action@v3
      - name: Remove GCDA files
        run: find target/ -name *.gcda -delete

  mariadb:
    name: MariaDB
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mariadb: [10_6, 10_2]
        runtime: [tokio]
        tls: [native-tls, rustls]
    needs: check
    steps:
      - uses: actions/checkout@v3

      - uses: moonrepo/setup-rust@v0
        with:
          channel: nightly

      - run: docker-compose run -d -p 3306:3306 mariadb_${{ matrix.mariadb }}
      - run: sleep 30

      - name: Run tests
        run: cargo test --no-default-features --features mysql,runtime-${{ matrix.runtime }}-${{ matrix.tls }},functional-tests
        env:
          DATABASE_DSN: mysql://root:password@localhost:3306/dbal
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off'

      - name: Aggregate code coverage with grcov
        uses: alekitto/grcov@v0.2
      - name: Upload code coverage
        uses: codecov/codecov-action@v3
      - name: Remove GCDA files
        run: find target/ -name *.gcda -delete
